# Scan this file for changes every 60 seconds
refresh_rate: 60 seconds

appenders:
  # An appender named "stdout" that writes to stdout
  stdout:
    kind: console
    encoder:
      pattern: "[{d(%Y-%m-%d %H:%M:%S %Z)(utc)} {h({l})}  {M}] {m}{n}"

  # An appender named "filelog" that writes to a rolling file
  filelog:
    kind: rolling_file
    path: "$ENV{DATA_ROOT}/log/mitsuba.log"
    # Specifies if the appender should append to or truncate the log file if it
    # already exists. Defaults to `true`.
    append: true
    encoder:
      pattern: "[{d(%Y-%m-%d %H:%M:%S %Z)(utc)} {h({l})}  {M}] {m}{n}"
    policy:
      # Identifies which policy is to be used. If no kind is specified, it will
      # default to "compound".
      kind: compound

      # The remainder of the configuration is passed along to the policy's
      # deserializer, and will vary based on the kind of policy.
      trigger:
        kind: size
        limit: 10 mb

      roller:
        kind: delete

# Set the default logging level to "warn" and attach the "stdout" appender to the root
root:
  level: warn
  appenders:
    - stdout

loggers:
  mitsuba:
    level: warn
    appenders:
      - filelog
      - stdout
    additive: false
